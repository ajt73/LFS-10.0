PKG="glibc"
VER="2.32"
HOMEPAGE="http://www.gnu.org/software/libc/"
URL="http://ftp.gnu.org/gnu/${PKG}/${PKG}-${VER}.tar.xz"
MD5="720c7992861c57cf97d66a2f36d8d1fa"
PATCH=("http://www.linuxfromscratch.org/patches/lfs/10.0/glibc-2.32-fhs-1.patch")
PATCHMD5=("9a5997c3452909b1769918c759eff8a2")
SBU="4.6"

__prepare() {
  case $(uname -m) in
    i?86)
      ln -sf ld-linux.so.2 $LFS/lib/ld-lsb.so.3
    ;;
    x86_64)
      ln -sf ../lib/ld-linux-x86-64.so.2 $LFS/lib64
      ln -sf ../lib/ld-linux-x86-64.so.2 $LFS/lib64/ld-lsb-x86-64.so.3
    ;;
  esac
  
  src_patch 
  
  mkdir build
  cd build
}

__configure() {
  printf "Configuring $GREEN$PKG-$VER $DEFAULT\n"
  ../configure                           \
      --prefix=/usr                      \
      --host=$LFS_TGT                    \
      --build=$(../scripts/config.guess) \
      --enable-kernel=3.2                \
      --with-headers=$LFS/usr/include    \
      libc_cv_slibdir=/lib >> ${buildlog} 2>&1
}

__make() {
  src_make || exit $?
}

__install() {
  inst_opts="DESTDIR=$LFS"
  src_install

  # Sanity check
  echo 'int main(){}' > dummy.c
  $LFS_TGT-gcc dummy.c
  case $(uname -m) in
    x86_64)
      interpreter="/lib64/ld-linux-x86-64.so.2"
    ;;
    *)
      interpreter="/lib/ld-linux.so.2"
    ;;
  esac
  if [ $(readelf -l a.out | grep -c ${interpreter}) -eq 0 ]; then
    echo "Error in glibc!"
    readelf -l a.out | grep ${interpreter}
    exit 1
  fi
  rm dummy.c a.out
  $LFS/tools/libexec/gcc/$LFS_TGT/10.2.0/install-tools/mkheaders >> ${buildlog} 2>&1
}
